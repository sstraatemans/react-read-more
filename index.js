import React, { useRef, useState, useEffect } from 'react';

var ReadMore = function (_a) {
    var children = _a.children, readMoreLabel = _a.readMoreLabel, readLessLabel = _a.readLessLabel, maxCharacters = _a.maxCharacters, maxWords = _a.maxWords, maxLines = _a.maxLines, _b = _a.ellipsis, ellipsis = _b === void 0 ? '...' : _b;
    var readMoreRef = useRef(null);
    var buttonRef = useRef(null);
    var _c = useState(false), isOpen = _c[0], setIsOpen = _c[1];
    var _d = useState(children), text = _d[0], setText = _d[1];
    useEffect(function () {
        if (isOpen) {
            setText(children);
        }
        else {
            if (maxCharacters) {
                setText(text.substring(0, maxCharacters));
            }
            if (maxWords) {
                var wordsArray = text.split(' ');
                setText(wordsArray.slice(0, maxWords).join(' '));
            }
        }
    }, [isOpen]);
    var handleClick = function () {
        setIsOpen(function (v) { return !v; });
    };
    var getLabel = function (open) {
        return isOpen ? readLessLabel : readMoreLabel;
    };
    return (React.createElement("div", { ref: readMoreRef },
        text,
        React.createElement("span", { ref: buttonRef },
            ellipsis,
            React.createElement("button", { type: "button", onClick: handleClick }, getLabel()))));
};

export default ReadMore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbInNyYy9SZWFkTW9yZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BzV2l0aENoaWxkcmVuLCB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBpQmFzZSB7XG4gICAgY2hpbGRyZW46IHN0cmluZztcbiAgICByZWFkTW9yZUxhYmVsOiBzdHJpbmc7XG4gICAgcmVhZExlc3NMYWJlbDogc3RyaW5nO1xuICAgIG1heENoYXJhY3RlcnM/OiBudW1iZXI7XG4gICAgbWF4V29yZHM/OiBudW1iZXI7XG4gICAgbWF4TGluZXM/OiBudW1iZXI7XG4gICAgZWxsaXBzaXM/OiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBpTWF4Q2hhcnMgZXh0ZW5kcyBpQmFzZSB7XG4gICAgbWF4Q2hhcmFjdGVyczogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgaU1heFdvcmRzIGV4dGVuZHMgaUJhc2Uge1xuICAgIG1heFdvcmRzOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBpTWF4TGluZXMgZXh0ZW5kcyBpQmFzZSB7XG4gICAgbWF4TGluZXM6IG51bWJlcjtcbn1cblxudHlwZSBpUHJvcHMgPSBpTWF4Q2hhcnMgfCBpTWF4V29yZHMgfCBpTWF4TGluZXM7XG5cbmNvbnN0IFJlYWRNb3JlOiBSZWFjdC5GQzxQcm9wc1dpdGhDaGlsZHJlbjxpUHJvcHM+PiA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgcmVhZE1vcmVMYWJlbCxcbiAgICByZWFkTGVzc0xhYmVsLFxuICAgIG1heENoYXJhY3RlcnMsXG4gICAgbWF4V29yZHMsXG4gICAgbWF4TGluZXMsXG4gICAgZWxsaXBzaXMgPSAnLi4uJyxcbn0pID0+IHtcbiAgICBjb25zdCByZWFkTW9yZVJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudCB8IG51bGw+KG51bGwpO1xuICAgIGNvbnN0IGJ1dHRvblJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudCB8IG51bGw+KG51bGwpO1xuICAgIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW3RleHQsIHNldFRleHRdID0gdXNlU3RhdGU8c3RyaW5nPihjaGlsZHJlbik7XG5cbiAgICBjb25zdCBnZXRMaW5lSGVpZ2h0ID0gKHN0cikgPT4ge307XG5cbiAgICBjb25zdCBjcmVhdGVFbGVtZW50ID0gKCkgPT4ge307XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoaXNPcGVuKSB7XG4gICAgICAgICAgICBzZXRUZXh0KGNoaWxkcmVuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChtYXhDaGFyYWN0ZXJzKSB7XG4gICAgICAgICAgICAgICAgc2V0VGV4dCh0ZXh0LnN1YnN0cmluZygwLCBtYXhDaGFyYWN0ZXJzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWF4V29yZHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3b3Jkc0FycmF5ID0gdGV4dC5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIHNldFRleHQod29yZHNBcnJheS5zbGljZSgwLCBtYXhXb3Jkcykuam9pbignICcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtYXhMaW5lcykge1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW2lzT3Blbl0pO1xuXG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIHNldElzT3BlbigodikgPT4gIXYpO1xuICAgIH07XG5cbiAgICBjb25zdCBnZXRMYWJlbCA9IChvcGVuOiBib29sZWFuKTogc3RyaW5nID0+IHtcbiAgICAgICAgcmV0dXJuIGlzT3BlbiA/IHJlYWRMZXNzTGFiZWwgOiByZWFkTW9yZUxhYmVsO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IHJlZj17cmVhZE1vcmVSZWZ9PlxuICAgICAgICAgICAge3RleHR9XG5cbiAgICAgICAgICAgIDxzcGFuIHJlZj17YnV0dG9uUmVmfT5cbiAgICAgICAgICAgICAgICB7ZWxsaXBzaXN9XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17aGFuZGxlQ2xpY2t9PlxuICAgICAgICAgICAgICAgICAgICB7Z2V0TGFiZWwoaXNPcGVuKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWRNb3JlO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0lBMEJNLFFBQVEsR0FBd0MsVUFBQyxFQVF0RDtRQVBHLFFBQVEsY0FBQSxFQUNSLGFBQWEsbUJBQUEsRUFDYixhQUFhLG1CQUFBLEVBQ2IsYUFBYSxtQkFBQSxFQUNiLFFBQVEsY0FBQSxFQUNSLFFBQVEsY0FBQSxFQUNSLGdCQUFnQixFQUFoQixRQUFRLG1CQUFHLEtBQUssS0FBQTtJQUVoQixJQUFNLFdBQVcsR0FBRyxNQUFNLENBQXdCLElBQUksQ0FBQyxDQUFDO0lBQ3hELElBQU0sU0FBUyxHQUFHLE1BQU0sQ0FBd0IsSUFBSSxDQUFDLENBQUM7SUFDaEQsSUFBQSxLQUFzQixRQUFRLENBQUMsS0FBSyxDQUFDLEVBQXBDLE1BQU0sUUFBQSxFQUFFLFNBQVMsUUFBbUIsQ0FBQztJQUN0QyxJQUFBLEtBQWtCLFFBQVEsQ0FBUyxRQUFRLENBQUMsRUFBM0MsSUFBSSxRQUFBLEVBQUUsT0FBTyxRQUE4QixDQUFDO0lBTW5ELFNBQVMsQ0FBQztRQUNOLElBQUksTUFBTSxFQUFFO1lBQ1IsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3JCO2FBQU07WUFDSCxJQUFJLGFBQWEsRUFBRTtnQkFDZixPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQzthQUM3QztZQUNELElBQUksUUFBUSxFQUFFO2dCQUNWLElBQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ25DLE9BQU8sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzthQUNwRDtTQUdKO0tBQ0osRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFYixJQUFNLFdBQVcsR0FBRztRQUNoQixTQUFTLENBQUMsVUFBQyxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsR0FBQSxDQUFDLENBQUM7S0FDeEIsQ0FBQztJQUVGLElBQU0sUUFBUSxHQUFHLFVBQUMsSUFBYTtRQUMzQixPQUFPLE1BQU0sR0FBRyxhQUFhLEdBQUcsYUFBYSxDQUFDO0tBQ2pELENBQUM7SUFFRixRQUNJLDZCQUFLLEdBQUcsRUFBRSxXQUFXO1FBQ2hCLElBQUk7UUFFTCw4QkFBTSxHQUFHLEVBQUUsU0FBUztZQUNmLFFBQVE7WUFDVCxnQ0FBUSxJQUFJLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBRSxXQUFXLElBQ3JDLFFBQVEsQ0FBTyxDQUFDLENBQ1osQ0FDTixDQUNMLEVBQ1I7QUFDTjs7OzsifQ==
